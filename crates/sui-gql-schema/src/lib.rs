#![cfg_attr(all(doc, not(doctest)), feature(doc_auto_cfg))]

//! Sui's GraphQL schema to use with `cynic`.
//!
//! Read more about schemas in <https://cynic-rs.dev/schemas> and why this crate is separate in
//! <https://cynic-rs.dev/large-apis>.
//!
//! The types in the [`scalars`](crate::scalars) module may be specially useful.

#[cfg(feature = "scalars")]
pub mod scalars;

#[cfg(feature = "build")]
#[doc(hidden)]
/// The Sui schema SDL file as a string.
pub const SCHEMA_SUI: &str = include_str!("../schemas/sui.graphql");

#[cfg(feature = "build")]
pub fn register_schemas() {
    cynic_codegen::register_schema("sui")
        .from_sdl(SCHEMA_SUI)
        .expect("Fine to panic in build scripts")
        .as_default()
        .expect("Same as above");
}

/// Sui's GraphQL schema generated by [cynic]
#[doc(hidden)]
#[allow(clippy::use_self)]
#[cynic::schema("sui")]
pub mod schema {}
